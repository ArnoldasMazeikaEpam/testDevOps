# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# trigger:
# - main

resources:
  pipelines:
  - pipeline: firstPipe # Name of the pipeline resource.
    source: ArnoldasMazeikaEpam.testDevOps.First # The name of the pipeline referenced by this pipeline resource.
    # project: FabrikamProject # Required only if the source pipeline is in another project
    trigger: true # Run app-ci pipeline when any run of security-lib-ci completes


pool: 
  name: Self agent test
  # demands:
  #   - agent -equals 1

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'specific'
    project: 'e43bfa47-9507-4275-8d37-97891357f4b5'
    pipeline: '1'
    specificBuildWithTriggering: true
    buildVersionToDownload: 'latest'
    downloadType: 'single'
    artifactName: 'dateFromBuild'
    downloadPath: '$(System.ArtifactsDirectory)'
    cleanDestinationFolder: true
    
# - script: |
#     echo Add other tasks to build, test, and deploy your project.
#     echo See https://aka.ms/yaml
#   displayName: 'Run a multi-line script'

- task: CmdLine@2
  inputs:
    script: |
      echo Write your commands here
      ls -la $(System.ArtifactsDirectory)/dateFromBuild
      tar -xvf $(System.ArtifactsDirectory)/dateFromBuild/dateFromBuild.tar 
      rm -rf $(System.ArtifactsDirectory)/dateFromBuild
      pwd
      ls -la


- task: CmdLine@2
  inputs:
    script: |
      echo Write your commands here
      mkdir art
      echo Pipeline-1, buildnumber $(Build.BuildNumber) >> artifa/pipedateForFirst    
      cat artifa/pipedateForFirst 
      mv artifa/pipedateForFirst art
 

- task: CopyFiles@2
  inputs:
    contents: 'art/**'
    targetFolder: $(Build.ArtifactStagingDirectory)
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'dateFromPar1'
    publishLocation: 'Container'
    StoreAsTar: true

- task: UniversalPackages@0
  inputs:
    command: 'download'
    downloadDirectory: '$(Build.ArtifactStagingDirectory)'
    feedsToUse: 'internal'
    vstsFeed: '253737b6-70b9-419e-9e58-61db393e8ed9'
    vstsFeedPackage: 'artifactParallelFirst'
    vstsPackageVersion: '1.1'
    verbosity: 'Trace'
- task: UniversalPackages@0
  inputs:
    command: 'publish'
    publishDirectory: '$(Build.ArtifactStagingDirectory)'
    feedsToUsePublish: 'internal'
    vstsFeedPublish: '253737b6-70b9-419e-9e58-61db393e8ed9'
    vstsFeedPackagePublish: 'TextArchive2'
    versionOption: 'patch'
    verbosity: 'Trace'
